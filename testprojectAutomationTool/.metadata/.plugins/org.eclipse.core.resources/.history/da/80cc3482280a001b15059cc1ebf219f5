package runner;

import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import io.cucumber.testng.AbstractTestNGCucumberTests;
import io.cucumber.testng.CucumberOptions;
import io.cucumber.testng.FeatureWrapper;
import io.cucumber.testng.Pickle;
import io.cucumber.testng.PickleWrapper;
import io.cucumber.testng.TestNGCucumberRunner;


@CucumberOptions(features="src/test/java/features",
glue= {"stepDefinations"},
monochrome=true,
dryRun=false)
public class Runner extends AbstractTestNGCucumberTests{
	
	private TestNGCucumberRunner testNGCucumberRunner;
	 
    @BeforeClass(alwaysRun = true)
    public void setUpClass() {
        testNGCucumberRunner = new TestNGCucumberRunner(this.getClass());
    }
 
    @Test(groups = "cucumber", description = "Runs Cucumber scenarios", dataProvider = "scenarios")
    public void feature(PickleWrapper pickle, FeatureWrapper feature) {
    	System.out.println("-----getName-------"+ pickle.getPickle().getName() +"--------");
    	System.out.println("-----getLine---"+ pickle.getPickle().getLine() +"--------");
    	System.out.println("-----getScenarioLine---"+ pickle.getPickle().getScenarioLine() +"--------");
        testNGCucumberRunner.runScenario(pickle.getPickle());
    }
 
    @DataProvider
    public Object[][] scenarios() {
        return testNGCucumberRunner.provideScenarios();
    }
 
    @AfterClass(alwaysRun = true)
    public void tearDownClass() {
        testNGCucumberRunner.finish();
    }

}
