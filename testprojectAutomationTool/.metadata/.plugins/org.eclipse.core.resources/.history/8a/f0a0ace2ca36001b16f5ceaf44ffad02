package screens;

import java.util.Iterator;
import java.util.List;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.support.PageFactory;

import base.CommonFunctions;
import base.ScreenBase;
import constants.Constants;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.android.AndroidElement;
import io.appium.java_client.pagefactory.AndroidFindBy;
import io.appium.java_client.pagefactory.AppiumFieldDecorator;


public class AddCropScreen extends ScreenBase {

	public AddCropScreen(AndroidDriver<AndroidElement> driver) {
		super(driver);
		PageFactory.initElements(new AppiumFieldDecorator(driver), this);
		// TODO Auto-generated constructor stub
	}

	@AndroidFindBy(xpath=Constants.SELECT_ADDCROP_XPATH)
	private AndroidElement selectAddCrop;

	@AndroidFindBy(xpath=Constants.SELECT_FARMNAME_XPATH)
	private AndroidElement farmName;
	
	@AndroidFindBy(xpath=Constants.SELECT_FARMNAME1_XPATH)
	private AndroidElement farmName1;

	@AndroidFindBy(xpath=Constants.SELECT_RICEVARIETIES_XPATH)
	private  List<AndroidElement>  riceVariety;

	@AndroidFindBy(xpath=Constants.SELECT_GROWINGPERIOD_XPATH)
	private  List<AndroidElement> growPeriod;

	@AndroidFindBy(xpath=Constants.SELECT_FARMSIZE_XPATH)
	private  List<AndroidElement>  sizeFarm;
	

	@AndroidFindBy(xpath=Constants.SELECT_SAVE_XPATH)
	private AndroidElement selectSave;

	public void addCrop() {
		selectAddCrop.click();
	}

	public void enterFarmNameandDetails(String nameFarm, String varietyRice, String growingPeriod, String farmSize) {
		Boolean flag=true;
		

		farmName.click();
		System.out.println(".... " +  nameFarm);
		JavascriptExecutor jse = (JavascriptExecutor)driver;
		jse.executeScript("arguments[0].value='"+ nameFarm +"';", farmName1);
		//farmName.sendKeys(nameFarm);
		
		for(int i=0; i<riceVariety.size(); i++) {
			System.out.println(1);
			System.out.println(riceVariety.get(i).getText());
			if(riceVariety.get(i).getText().equals(varietyRice)) {
				riceVariety.get(i).click();
				System.out.println(12);
				break;
			}else {
				System.out.println(11);
				continue;
			}
		}
		if(growPeriod.size()<=0) {
			CommonFunctions.scrollUp(1, driver);
			for(int j=0; j<growPeriod.size(); j++) {
				System.out.println(growPeriod.get(j).getText());
				if(growPeriod.get(j).getText().equals(growingPeriod)) {
					growPeriod.get(j).click();
					System.out.println(2);
					break;
				}else {
					System.out.println(13);
					CommonFunctions.scrollUp(1, driver);
					continue;
				}
		}}else {
			for(int j=0; j<growPeriod.size(); j++) {
				System.out.println(growPeriod.get(j).getText());
				if(growPeriod.get(j).getText().equals(growingPeriod)) {
					growPeriod.get(j).click();
					System.out.println(2);
					break;
				}else {
					System.out.println(13);
					CommonFunctions.scrollUp(1, driver);
					continue;
				}
			}	
			}
				
		
		if(sizeFarm.size()<=0) {
			CommonFunctions.scrollUp(1, driver);
			for(int k=0; k<sizeFarm.size(); k++) {
				if(sizeFarm.get(k).getText().equals(farmSize)) {
					sizeFarm.get(k).click();
					System.out.println(3);
					break;
				}else {
					CommonFunctions.scrollUp(1, driver);
					continue;
				}
				
			}
		}else {

				for(int k=0; k<sizeFarm.size(); k++) {
					if(sizeFarm.get(k).getText().equals(farmSize)) {
						sizeFarm.get(k).click();
						System.out.println(3);
						break;
					}else {
						CommonFunctions.scrollUp(1, driver);
						continue;
					}
					
				}
			}
		
	}
		public void selectSave() {
					selectSave.click();

				}



			}
